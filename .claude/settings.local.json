{
  "permissions": {
    "allow": [
      "Bash(git commit:*)",
      "Bash(npm ls:*)",
      "WebSearch",
      "Bash(git add:*)",
      "Bash(npm install:*)",
      "Bash(test:*)",
      "Bash(git push:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run lint)",
      "Bash(npx next build:*)",
      "Bash(taskkill:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(npm run test:run:*)",
      "Bash(tasklist)",
      "Bash(TASKKILL /F /IM node.exe)",
      "Bash(set)",
      "Bash(git pull:*)",
      "Bash(git checkout:*)",
      "Bash(git merge:*)",
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Bash(npx prisma generate:*)",
      "Bash(npx prisma:*)",
      "Bash(pkill:*)",
      "Bash(cmd //c:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"yes\" npx prisma migrate reset --force)",
      "Bash(curl:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"yes go ahead, although the database should be empty and should not affect Agent Lee as Agent Lee is using Api calls and only using the datase to store data but this should not affect performance the database should be empty but set up and ready\" npx prisma migrate reset --force)",
      "Bash(cmd /c:*)",
      "Bash(npx kill-port:*)",
      "Bash(node:*)",
      "Bash(npx next lint:*)",
      "Bash(timeout 30s npm run build)",
      "Bash(git grep:*)",
      "Bash(cat:*)",
      "Bash(npx dotenv -e .env.local -- npx prisma db push:*)",
      "Bash(copy .env.local .env)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"yes\" npx prisma db push --force-reset)",
      "Bash(TASKKILL /F /PID 1640)",
      "Bash(TASKKILL /F /IM \"node.exe\")",
      "Bash(TASKKILL /F /PID 35040)",
      "Bash(TASKKILL /F /IM node.exe /T)",
      "Bash(find:*)",
      "Bash(vercel env:*)",
      "Bash(TASKKILL /F /PID 110112)",
      "Bash(TASKKILL /F /PID 33400)",
      "Bash(TASKKILL /F /PID 18960)",
      "Bash(npx next dev:*)",
      "Bash(start http://localhost:3001/learning)",
      "Bash(start http://localhost:3001/admin/courses)",
      "Bash(start http://localhost:3001/agent-lee)",
      "Bash(start http://localhost:3000/admin/courses)",
      "Bash(start http://localhost:3001/auth/signup)",
      "Bash(start http://localhost:3002/learning)",
      "Bash(start http://localhost:3002)",
      "Bash(start http://localhost:3003)",
      "Bash(start http://localhost:3004)",
      "Bash(npm i:*)",
      "Bash(npx vercel env:*)",
      "Bash(timeout 60s npm run build)",
      "Bash(TASKKILL /F /PID 258080)",
      "Bash(npx playwright test:*)",
      "Bash(npx playwright:*)",
      "Bash(npm run test:unit:*)",
      "Bash(npx vitest run:*)",
      "Bash(start http://localhost:3000/agent-lee)",
      "Bash(tasklist:*)",
      "Bash(npx eslint:*)",
      "Bash(start http://localhost:3001)",
      "Bash(grep:*)",
      "Bash(del /Q C:Usersleeaknavada_roboticsappanalyticspage.tsx)",
      "Bash(start http://localhost:3002/agent-lee)",
      "Bash(npx vitest:*)",
      "Bash(del pnpm-lock.yaml)",
      "Bash(nslookup:*)",
      "Bash(ipconfig /flushdns)",
      "Bash(timeout 3 sleep 3)",
      "Bash(rm:*)",
      "Bash(git restore:*)",
      "Bash(dir:*)",
      "Bash(ls:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm run vercel-build:*)",
      "Bash(where python)",
      "Bash(pip show:*)",
      "Bash(python:*)",
      "Bash(del .eslintrc.json)",
      "Bash(SKIP_VALIDATION=true NODE_ENV=production npm run vercel-build)",
      "Bash(git rm:*)",
      "Bash(gh issue create:*)",
      "Bash(gh project:*)",
      "Bash(gh auth:*)",
      "WebFetch(domain:github.com)",
      "Bash(gh repo edit:*)",
      "Bash(git clone:*)",
      "Bash(gh issue list:*)"
    ],
    "deny": [],
    "ask": []
  }
}